# sigma check cB211.072.64 th6 t48-64


```{r ,include=FALSE}
library(Rose)
library(ggplot2)
library(plotly)
library(knitr)
require(tikzDevice)
df <- data.frame(x = 1:5, y = 1:5)
f1 <- function(df) {
  gg <- ggplot(df, aes(x,y)) + geom_point()
  assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
  #ggp
  df    # NOT returning a plot
}
res1 <- f1(df)
ggp   # Let knit handle the plot
myplotly(ggplot())
```


## Z0


```{r, echo=FALSE, results='asis', warning=FALSE}
file<-"/home/garofalo/analysis/heavy_quarks/data_Inc/out/cB211.072.64_ins48_ins64_th6.dat_fit_HLT_Z0-sigma_fit_data.txt"
df<- read.table(file, header=FALSE, fill=TRUE)
        
        
gg<- myggplot(fill=FALSE)
idy<-ncol(df)-2
# gg<- gg +geom_point(aes(x=dfi[,1], y=dfi[,2], color="intepolated"))      
# gg<- gg +geom_errorbar(aes(x=dfi[,1], ymax=dfi[,2]+dfi[,3],
#                             ymin=dfi[,2]-dfi[,3],
#                            , color="intepolated"), width=1e-4)      
gg<-gg+  geom_point(data=df, mapping=aes(x=df[,1] , y=df[,idy],
                                         color=as.factor(df[,idy+2]), shape=as.factor(df[,idy+2])) 
                    ,width=1e-4)  +labs(color = "", shape="")
gg<-gg + geom_errorbar(data=df, mapping=aes(x=df[,1] , ymin=df[,idy]-df[,idy+1],
                                            ymax=df[,idy]+df[,idy+1],color=as.factor(df[,idy+2]),shape=as.factor(df[,idy+2]) ) 
                               ,width=1e-4)
datalist = list()
for (n in c(1:1)){
          
          file=sprintf("/home/garofalo/analysis/heavy_quarks/data_Inc/out/cB211.072.64_ins48_ins64_th6.dat_fit_HLT_Z0-sigma_fit_out_n%d_sigma.txt",n-1)
          #if(!file.exists(file)){next}
          datalist[[n]]<- read.table(file, header=FALSE, fill=TRUE,   
                                     col.names=c(paste0("x",n),paste0("fit",n),paste0("fiterr",n)))
          
          gg<-gg + geom_ribbon(data=datalist[[n]], 
                               mapping=aes_string(x=datalist[[n]][,1] ,
                                                  ymin=datalist[[n]][,2]-datalist[[n]][,3],
                                                  ymax=datalist[[n]][,2]+datalist[[n]][,3]),alpha=0.5, fill="red")
          gg<-gg + geom_line(data=datalist[[n]],
                             mapping=aes_string(x=datalist[[n]][,1] ,
                                                y=datalist[[n]][,2]  ),color="red" )
          
        
}
fig<- myplotly(gg,title,"$\\sigma$", "$Z_0$",
                       to_print = FALSE, output="HTML", legend_position = c(0.8,0.9)) 
fig
```



## Z1


```{r, echo=FALSE, results='asis', warning=FALSE}
file<-"/home/garofalo/analysis/heavy_quarks/data_Inc/out/cB211.072.64_ins48_ins64_th6.dat_fit_HLT_Z1-sigma_fit_data.txt"
df<- read.table(file, header=FALSE, fill=TRUE)
        
        
gg<- myggplot(fill=FALSE)
idy<-ncol(df)-2
# gg<- gg +geom_point(aes(x=dfi[,1], y=dfi[,2], color="intepolated"))      
# gg<- gg +geom_errorbar(aes(x=dfi[,1], ymax=dfi[,2]+dfi[,3],
#                             ymin=dfi[,2]-dfi[,3],
#                            , color="intepolated"), width=1e-4)      
gg<-gg+  geom_point(data=df, mapping=aes(x=df[,1] , y=df[,idy],
                                         color=as.factor(df[,idy+2]), shape=as.factor(df[,idy+2])) 
                    ,width=1e-4)  +labs(color = "", shape="")
gg<-gg + geom_errorbar(data=df, mapping=aes(x=df[,1] , ymin=df[,idy]-df[,idy+1],
                                            ymax=df[,idy]+df[,idy+1],color=as.factor(df[,idy+2]),shape=as.factor(df[,idy+2]) ) 
                               ,width=1e-4)
datalist = list()
for (n in c(1:1)){
          
          file=sprintf("/home/garofalo/analysis/heavy_quarks/data_Inc/out/cB211.072.64_ins48_ins64_th6.dat_fit_HLT_Z1-sigma_fit_out_n%d_sigma.txt",n-1)
          #if(!file.exists(file)){next}
          datalist[[n]]<- read.table(file, header=FALSE, fill=TRUE,   
                                     col.names=c(paste0("x",n),paste0("fit",n),paste0("fiterr",n)))
          
          gg<-gg + geom_ribbon(data=datalist[[n]], 
                               mapping=aes_string(x=datalist[[n]][,1] ,
                                                  ymin=datalist[[n]][,2]-datalist[[n]][,3],
                                                  ymax=datalist[[n]][,2]+datalist[[n]][,3]),alpha=0.5, fill="red")
          gg<-gg + geom_line(data=datalist[[n]],
                             mapping=aes_string(x=datalist[[n]][,1] ,
                                                y=datalist[[n]][,2]  ),color="red" )
          
        
}
fig<- myplotly(gg,title,"$\\sigma$", "$Z_1$",
                       to_print = FALSE, output="HTML", legend_position = c(0.8,0.9)) 
fig
```



## Z2


```{r, echo=FALSE, results='asis', warning=FALSE}
file<-"/home/garofalo/analysis/heavy_quarks/data_Inc/out/cB211.072.64_ins48_ins64_th6.dat_fit_HLT_Z2-sigma_fit_data.txt"
df<- read.table(file, header=FALSE, fill=TRUE)
        
        
gg<- myggplot(fill=FALSE)
idy<-ncol(df)-2
# gg<- gg +geom_point(aes(x=dfi[,1], y=dfi[,2], color="intepolated"))      
# gg<- gg +geom_errorbar(aes(x=dfi[,1], ymax=dfi[,2]+dfi[,3],
#                             ymin=dfi[,2]-dfi[,3],
#                            , color="intepolated"), width=1e-4)      
gg<-gg+  geom_point(data=df, mapping=aes(x=df[,1] , y=df[,idy],
                                         color=as.factor(df[,idy+2]), shape=as.factor(df[,idy+2])) 
                    ,width=1e-4)  +labs(color = "", shape="")
gg<-gg + geom_errorbar(data=df, mapping=aes(x=df[,1] , ymin=df[,idy]-df[,idy+1],
                                            ymax=df[,idy]+df[,idy+1],color=as.factor(df[,idy+2]),shape=as.factor(df[,idy+2]) ) 
                               ,width=1e-4)
datalist = list()
for (n in c(1:1)){
          
          file=sprintf("/home/garofalo/analysis/heavy_quarks/data_Inc/out/cB211.072.64_ins48_ins64_th6.dat_fit_HLT_Z2-sigma_fit_out_n%d_sigma.txt",n-1)
          #if(!file.exists(file)){next}
          datalist[[n]]<- read.table(file, header=FALSE, fill=TRUE,   
                                     col.names=c(paste0("x",n),paste0("fit",n),paste0("fiterr",n)))
          
          gg<-gg + geom_ribbon(data=datalist[[n]], 
                               mapping=aes_string(x=datalist[[n]][,1] ,
                                                  ymin=datalist[[n]][,2]-datalist[[n]][,3],
                                                  ymax=datalist[[n]][,2]+datalist[[n]][,3]),alpha=0.5, fill="red")
          gg<-gg + geom_line(data=datalist[[n]],
                             mapping=aes_string(x=datalist[[n]][,1] ,
                                                y=datalist[[n]][,2]  ),color="red" )
          
        
}
fig<- myplotly(gg,title,"$\\sigma$", "$Z_2$",
                       to_print = FALSE, output="HTML", legend_position = c(0.8,0.9)) 
fig
```